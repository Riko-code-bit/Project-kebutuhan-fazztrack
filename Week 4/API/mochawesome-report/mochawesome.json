{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2023-03-13T17:19:04.421Z",
    "end": "2023-03-13T17:19:04.469Z",
    "duration": 48,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b3a76bea-1cd6-48b9-b017-8387595af60d",
      "title": "",
      "fullFile": "C:\\Users\\rikoh\\Documents\\Fazztrack\\Repo-kebutuhan-fazztrack\\Week 4\\API\\test-api\\tugas-api.js",
      "file": "\\test-api\\tugas-api.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d15f5484-fd72-417e-a2d9-3755344b0c84",
          "title": "API automation test untuk endpoint GET /v1/users/{id}",
          "fullFile": "C:\\Users\\rikoh\\Documents\\Fazztrack\\Repo-kebutuhan-fazztrack\\Week 4\\API\\test-api\\tugas-api.js",
          "file": "\\test-api\\tugas-api.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Hit Endpoint create user in \"API automation test untuk endpoint GET /v1/users/{id}\"",
              "fullTitle": "API automation test untuk endpoint GET /v1/users/{id} \"before all\" hook: Hit Endpoint create user in \"API automation test untuk endpoint GET /v1/users/{id}\"",
              "timedOut": false,
              "duration": 30,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// data tampungan dari data file lokal\nlet data = dataCreateUser1.dataCreateUser();\n//To do create user\nconst response = await apiUnderTest.createUser(data);\n  console.log(response.body);\n  idUser = response.body.id;",
              "err": {},
              "uuid": "96bea925-9aee-4cec-991b-ddc7a754414b",
              "parentUUID": "d15f5484-fd72-417e-a2d9-3755344b0c84",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "ID-01 - User menggunakan data user id yang valid.",
              "fullTitle": "API automation test untuk endpoint GET /v1/users/{id} ID-01 - User menggunakan data user id yang valid.",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// let response = await apiUnderTest.createUser(data)\n // dimake sure apakah id yg dibuat id before ada\n response = await apiUnderTest.getUserDetail(idUser); \n     // tampungan data response body\n let data1 = response.body\n console.log(data1)\n  expect(response.status).to.eql(200); // assertion code\n  console.log(response.status);\n //  expect(response.body.id).to.equal(data1.id); // assertion id\n expect(response.body).to.have.property(`id`, `${idUser}`); // assertion id\n  for(let index = 0; index < response.body.length; index++){\n   expect(response.body[index]).to.be.jsonSchema(schemaResponse.getIdSchema1)\n }",
              "err": {},
              "uuid": "a402212a-a2d1-4e4e-aa7f-93470bcf7e08",
              "parentUUID": "d15f5484-fd72-417e-a2d9-3755344b0c84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "ID-02 -  User gagal mendapatkan data ketika data id yang diinputkan invalid.",
              "fullTitle": "API automation test untuk endpoint GET /v1/users/{id} ID-02 -  User gagal mendapatkan data ketika data id yang diinputkan invalid.",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// let data = jsonData;\n    // let response = await apiUnderTest.createUser(data);\n    response = await apiUnderTest.getUserDetail('098907079898'); //user memasukkan id yg slaah\n    console.log(response.status)\n    expect(response.status).to.eql(404);\n    expect(response.body).to.have.property('errorCode', 'ER-01');\n    expect(response.body).to.have.property('message', 'user not found');\n    console.log(response.body);",
              "err": {},
              "uuid": "37773da5-59d1-4f7f-8ff4-2d24bbbaced0",
              "parentUUID": "d15f5484-fd72-417e-a2d9-3755344b0c84",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a402212a-a2d1-4e4e-aa7f-93470bcf7e08",
            "37773da5-59d1-4f7f-8ff4-2d24bbbaced0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}